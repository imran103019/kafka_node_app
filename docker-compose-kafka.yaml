version: '3.1'
services:
  
  #kafka monitor defination
  kafkahq:
    image: tchiotludo/kafkahq:0.8.0
    environment:
      MICRONAUT_APPLICATION_JSON: |
        {
          "kafkahq": {
            "connections": {
              "docker-kafka-server": {
                  "properties": {
                    "bootstrap.servers": "kafka:9092"
                  }
              }
            }
          }
        }
    ports:
      - 8089:8080
    links:
      - kafka
  
  #zookeeper defination 
  zookeeper:
    image: bitnami/zookeeper:3
    ports:
      - "2181:2181"
    environment:
      - ZOO_ENABLE_AUTH=no
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - 'zookeeper_data:/bitnami'  
  
  #mysql defination 
  mysql:
    image: debezium/example-mysql:0.10
    ports:
     - 33064:3306
    environment:
     - MYSQL_ROOT_PASSWORD=debezium
     - MYSQL_USER=mysqluser
     - MYSQL_PASSWORD=mysqlpw

  #connector defination   
  connect:
    image: debezium/connect:0.10
    ports:
     - 8083:8083
    links:
     - kafka 
     - mysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses      

  #kafka defination
  kafka:
    image: bitnami/kafka:2
    ports:
      - '9092:9092' 
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - 'kafka_data:/bitnami' 
    depends_on:
      - zookeeper   

#volume mount for kafka, zookeeper
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local 